#include <iostream>
#include <string>
#include <algorithm>
#include <vector>

class Solution {
public:
    int minChar(const std::string& s) {
        std::string rev_s = s;
        std::reverse(rev_s.begin(), rev_s.end());
        std::string combined = s + "#" + rev_s;
        std::vector<int> lps(combined.size(), 0);

        for (int i = 1; i < combined.size(); ++i) {
            int j = lps[i - 1];
            while (j > 0 && combined[i] != combined[j]) {
                j = lps[j - 1];
            }
            if (combined[i] == combined[j]) {
                ++j;
            }
            lps[i] = j;
        }

        return s.size() - lps.back();
    }
};

int suvam() {
    Solution ob;
    std::string str = "abc";
    int ans = ob.minChar(str);
    std::cout << ans << std::endl; // Output: 2

    str = "aacecaaaa";
    ans = ob.minChar(str);
    std::cout << ans << std::endl; // Output: 2

    return 0;
}
